/*
 * This file is generated by jOOQ.
 */
package com.aga.onboard


import com.aga.onboard.tables.Company
import com.aga.onboard.tables.Databasechangelog
import com.aga.onboard.tables.Databasechangeloglock
import com.aga.onboard.tables.Onboarding
import com.aga.onboard.tables.OnboardingDocument
import com.aga.onboard.tables.OnboardingProcess
import com.aga.onboard.tables.OnboardingTag
import com.aga.onboard.tables.Tag
import com.aga.onboard.tables.Team
import com.aga.onboard.tables.Worker

import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class Public : SchemaImpl("public", DefaultCatalog.DEFAULT_CATALOG) {
    public companion object {

        /**
         * The reference instance of <code>public</code>
         */
        val PUBLIC: Public = Public()
    }

    /**
     * Информация о компаниях
     */
    val COMPANY: Company get() = Company.COMPANY

    /**
     * The table <code>public.databasechangelog</code>.
     */
    val DATABASECHANGELOG: Databasechangelog get() = Databasechangelog.DATABASECHANGELOG

    /**
     * The table <code>public.databasechangeloglock</code>.
     */
    val DATABASECHANGELOGLOCK: Databasechangeloglock get() = Databasechangeloglock.DATABASECHANGELOGLOCK

    /**
     * The table <code>public.onboarding</code>.
     */
    val ONBOARDING: Onboarding get() = Onboarding.ONBOARDING

    /**
     * Отношение сотрудников к документу онбординга
     */
    val ONBOARDING_DOCUMENT: OnboardingDocument get() = OnboardingDocument.ONBOARDING_DOCUMENT

    /**
     * Отношение сотрудников к процессу онбординга
     */
    val ONBOARDING_PROCESS: OnboardingProcess get() = OnboardingProcess.ONBOARDING_PROCESS

    /**
     * The table <code>public.onboarding_tag</code>.
     */
    val ONBOARDING_TAG: OnboardingTag get() = OnboardingTag.ONBOARDING_TAG

    /**
     * The table <code>public.tag</code>.
     */
    val TAG: Tag get() = Tag.TAG

    /**
     * Информация о командах в компании
     */
    val TEAM: Team get() = Team.TEAM

    /**
     * Информация о сотрудниках
     */
    val WORKER: Worker get() = Worker.WORKER

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        Company.COMPANY,
        Databasechangelog.DATABASECHANGELOG,
        Databasechangeloglock.DATABASECHANGELOGLOCK,
        Onboarding.ONBOARDING,
        OnboardingDocument.ONBOARDING_DOCUMENT,
        OnboardingProcess.ONBOARDING_PROCESS,
        OnboardingTag.ONBOARDING_TAG,
        Tag.TAG,
        Team.TEAM,
        Worker.WORKER
    )
}
