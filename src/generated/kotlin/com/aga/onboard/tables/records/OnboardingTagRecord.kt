/*
 * This file is generated by jOOQ.
 */
package com.aga.onboard.tables.records


import com.aga.onboard.tables.OnboardingTag

import java.util.UUID

import org.jooq.Field
import org.jooq.Record2
import org.jooq.Record3
import org.jooq.Row3
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class OnboardingTagRecord() : UpdatableRecordImpl<OnboardingTagRecord>(OnboardingTag.ONBOARDING_TAG), Record3<Int?, UUID?, Int?> {

    open var tagId: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var onboardingId: UUID?
        set(value): Unit = set(1, value)
        get(): UUID? = get(1) as UUID?

    open var tagRank: Int?
        set(value): Unit = set(2, value)
        get(): Int? = get(2) as Int?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record2<Int?, UUID?> = super.key() as Record2<Int?, UUID?>

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row3<Int?, UUID?, Int?> = super.fieldsRow() as Row3<Int?, UUID?, Int?>
    override fun valuesRow(): Row3<Int?, UUID?, Int?> = super.valuesRow() as Row3<Int?, UUID?, Int?>
    override fun field1(): Field<Int?> = OnboardingTag.ONBOARDING_TAG.TAG_ID
    override fun field2(): Field<UUID?> = OnboardingTag.ONBOARDING_TAG.ONBOARDING_ID
    override fun field3(): Field<Int?> = OnboardingTag.ONBOARDING_TAG.TAG_RANK
    override fun component1(): Int? = tagId
    override fun component2(): UUID? = onboardingId
    override fun component3(): Int? = tagRank
    override fun value1(): Int? = tagId
    override fun value2(): UUID? = onboardingId
    override fun value3(): Int? = tagRank

    override fun value1(value: Int?): OnboardingTagRecord {
        set(0, value)
        return this
    }

    override fun value2(value: UUID?): OnboardingTagRecord {
        set(1, value)
        return this
    }

    override fun value3(value: Int?): OnboardingTagRecord {
        set(2, value)
        return this
    }

    override fun values(value1: Int?, value2: UUID?, value3: Int?): OnboardingTagRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        return this
    }

    /**
     * Create a detached, initialised OnboardingTagRecord
     */
    constructor(tagId: Int? = null, onboardingId: UUID? = null, tagRank: Int? = null): this() {
        this.tagId = tagId
        this.onboardingId = onboardingId
        this.tagRank = tagRank
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised OnboardingTagRecord
     */
    constructor(value: com.aga.onboard.tables.pojos.OnboardingTag?): this() {
        if (value != null) {
            this.tagId = value.tagId
            this.onboardingId = value.onboardingId
            this.tagRank = value.tagRank
            resetChangedOnNotNull()
        }
    }
}
