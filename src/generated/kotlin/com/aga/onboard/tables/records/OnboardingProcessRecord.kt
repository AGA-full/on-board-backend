/*
 * This file is generated by jOOQ.
 */
package com.aga.onboard.tables.records


import com.aga.onboard.enums.Recommender
import com.aga.onboard.tables.OnboardingProcess

import java.time.LocalDateTime
import java.util.UUID

import org.jooq.Field
import org.jooq.Record2
import org.jooq.Record6
import org.jooq.Row6
import org.jooq.impl.UpdatableRecordImpl


/**
 * Отношение сотрудников к процессу онбординга
 */
@Suppress("UNCHECKED_CAST")
open class OnboardingProcessRecord() : UpdatableRecordImpl<OnboardingProcessRecord>(OnboardingProcess.ONBOARDING_PROCESS), Record6<UUID?, UUID?, Recommender?, UUID?, String?, LocalDateTime?> {

    open var workerId: UUID?
        set(value): Unit = set(0, value)
        get(): UUID? = get(0) as UUID?

    open var onboardingId: UUID?
        set(value): Unit = set(1, value)
        get(): UUID? = get(1) as UUID?

    open var recommender: Recommender?
        set(value): Unit = set(2, value)
        get(): Recommender? = get(2) as Recommender?

    open var instructorId: UUID?
        set(value): Unit = set(3, value)
        get(): UUID? = get(3) as UUID?

    open var progress: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var deadline: LocalDateTime?
        set(value): Unit = set(5, value)
        get(): LocalDateTime? = get(5) as LocalDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record2<UUID?, UUID?> = super.key() as Record2<UUID?, UUID?>

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row6<UUID?, UUID?, Recommender?, UUID?, String?, LocalDateTime?> = super.fieldsRow() as Row6<UUID?, UUID?, Recommender?, UUID?, String?, LocalDateTime?>
    override fun valuesRow(): Row6<UUID?, UUID?, Recommender?, UUID?, String?, LocalDateTime?> = super.valuesRow() as Row6<UUID?, UUID?, Recommender?, UUID?, String?, LocalDateTime?>
    override fun field1(): Field<UUID?> = OnboardingProcess.ONBOARDING_PROCESS.WORKER_ID
    override fun field2(): Field<UUID?> = OnboardingProcess.ONBOARDING_PROCESS.ONBOARDING_ID
    override fun field3(): Field<Recommender?> = OnboardingProcess.ONBOARDING_PROCESS.RECOMMENDER
    override fun field4(): Field<UUID?> = OnboardingProcess.ONBOARDING_PROCESS.INSTRUCTOR_ID
    override fun field5(): Field<String?> = OnboardingProcess.ONBOARDING_PROCESS.PROGRESS
    override fun field6(): Field<LocalDateTime?> = OnboardingProcess.ONBOARDING_PROCESS.DEADLINE
    override fun component1(): UUID? = workerId
    override fun component2(): UUID? = onboardingId
    override fun component3(): Recommender? = recommender
    override fun component4(): UUID? = instructorId
    override fun component5(): String? = progress
    override fun component6(): LocalDateTime? = deadline
    override fun value1(): UUID? = workerId
    override fun value2(): UUID? = onboardingId
    override fun value3(): Recommender? = recommender
    override fun value4(): UUID? = instructorId
    override fun value5(): String? = progress
    override fun value6(): LocalDateTime? = deadline

    override fun value1(value: UUID?): OnboardingProcessRecord {
        set(0, value)
        return this
    }

    override fun value2(value: UUID?): OnboardingProcessRecord {
        set(1, value)
        return this
    }

    override fun value3(value: Recommender?): OnboardingProcessRecord {
        set(2, value)
        return this
    }

    override fun value4(value: UUID?): OnboardingProcessRecord {
        set(3, value)
        return this
    }

    override fun value5(value: String?): OnboardingProcessRecord {
        set(4, value)
        return this
    }

    override fun value6(value: LocalDateTime?): OnboardingProcessRecord {
        set(5, value)
        return this
    }

    override fun values(value1: UUID?, value2: UUID?, value3: Recommender?, value4: UUID?, value5: String?, value6: LocalDateTime?): OnboardingProcessRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        return this
    }

    /**
     * Create a detached, initialised OnboardingProcessRecord
     */
    constructor(workerId: UUID? = null, onboardingId: UUID? = null, recommender: Recommender? = null, instructorId: UUID? = null, progress: String? = null, deadline: LocalDateTime? = null): this() {
        this.workerId = workerId
        this.onboardingId = onboardingId
        this.recommender = recommender
        this.instructorId = instructorId
        this.progress = progress
        this.deadline = deadline
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised OnboardingProcessRecord
     */
    constructor(value: com.aga.onboard.tables.pojos.OnboardingProcess?): this() {
        if (value != null) {
            this.workerId = value.workerId
            this.onboardingId = value.onboardingId
            this.recommender = value.recommender
            this.instructorId = value.instructorId
            this.progress = value.progress
            this.deadline = value.deadline
            resetChangedOnNotNull()
        }
    }
}
