/*
 * This file is generated by jOOQ.
 */
package com.aga.onboard.tables.daos


import com.aga.onboard.enums.Recommender
import com.aga.onboard.tables.OnboardingProcess
import com.aga.onboard.tables.records.OnboardingProcessRecord

import java.time.LocalDateTime
import java.util.UUID

import kotlin.collections.List

import org.jooq.Configuration
import org.jooq.Record2
import org.jooq.impl.DAOImpl


/**
 * Отношение сотрудников к процессу онбординга
 */
@Suppress("UNCHECKED_CAST")
open class OnboardingProcessDao(configuration: Configuration?) : DAOImpl<OnboardingProcessRecord, com.aga.onboard.tables.pojos.OnboardingProcess, Record2<UUID?, UUID?>>(OnboardingProcess.ONBOARDING_PROCESS, com.aga.onboard.tables.pojos.OnboardingProcess::class.java, configuration) {

    /**
     * Create a new OnboardingProcessDao without any configuration
     */
    constructor(): this(null)

    override fun getId(o: com.aga.onboard.tables.pojos.OnboardingProcess): Record2<UUID?, UUID?> = compositeKeyRecord(o.workerId, o.onboardingId)

    /**
     * Fetch records that have <code>worker_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfWorkerId(lowerInclusive: UUID?, upperInclusive: UUID?): List<com.aga.onboard.tables.pojos.OnboardingProcess> = fetchRange(OnboardingProcess.ONBOARDING_PROCESS.WORKER_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>worker_id IN (values)</code>
     */
    fun fetchByWorkerId(vararg values: UUID): List<com.aga.onboard.tables.pojos.OnboardingProcess> = fetch(OnboardingProcess.ONBOARDING_PROCESS.WORKER_ID, *values)

    /**
     * Fetch records that have <code>onboarding_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfOnboardingId(lowerInclusive: UUID?, upperInclusive: UUID?): List<com.aga.onboard.tables.pojos.OnboardingProcess> = fetchRange(OnboardingProcess.ONBOARDING_PROCESS.ONBOARDING_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>onboarding_id IN (values)</code>
     */
    fun fetchByOnboardingId(vararg values: UUID): List<com.aga.onboard.tables.pojos.OnboardingProcess> = fetch(OnboardingProcess.ONBOARDING_PROCESS.ONBOARDING_ID, *values)

    /**
     * Fetch records that have <code>recommender BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfRecommender(lowerInclusive: Recommender?, upperInclusive: Recommender?): List<com.aga.onboard.tables.pojos.OnboardingProcess> = fetchRange(OnboardingProcess.ONBOARDING_PROCESS.RECOMMENDER, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>recommender IN (values)</code>
     */
    fun fetchByRecommender(vararg values: Recommender): List<com.aga.onboard.tables.pojos.OnboardingProcess> = fetch(OnboardingProcess.ONBOARDING_PROCESS.RECOMMENDER, *values)

    /**
     * Fetch records that have <code>instructor_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfInstructorId(lowerInclusive: UUID?, upperInclusive: UUID?): List<com.aga.onboard.tables.pojos.OnboardingProcess> = fetchRange(OnboardingProcess.ONBOARDING_PROCESS.INSTRUCTOR_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>instructor_id IN (values)</code>
     */
    fun fetchByInstructorId(vararg values: UUID): List<com.aga.onboard.tables.pojos.OnboardingProcess> = fetch(OnboardingProcess.ONBOARDING_PROCESS.INSTRUCTOR_ID, *values)

    /**
     * Fetch records that have <code>progress BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfProgress(lowerInclusive: String?, upperInclusive: String?): List<com.aga.onboard.tables.pojos.OnboardingProcess> = fetchRange(OnboardingProcess.ONBOARDING_PROCESS.PROGRESS, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>progress IN (values)</code>
     */
    fun fetchByProgress(vararg values: String): List<com.aga.onboard.tables.pojos.OnboardingProcess> = fetch(OnboardingProcess.ONBOARDING_PROCESS.PROGRESS, *values)

    /**
     * Fetch records that have <code>deadline BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfDeadline(lowerInclusive: LocalDateTime?, upperInclusive: LocalDateTime?): List<com.aga.onboard.tables.pojos.OnboardingProcess> = fetchRange(OnboardingProcess.ONBOARDING_PROCESS.DEADLINE, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>deadline IN (values)</code>
     */
    fun fetchByDeadline(vararg values: LocalDateTime): List<com.aga.onboard.tables.pojos.OnboardingProcess> = fetch(OnboardingProcess.ONBOARDING_PROCESS.DEADLINE, *values)
}
