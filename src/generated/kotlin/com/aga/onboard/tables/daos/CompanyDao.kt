/*
 * This file is generated by jOOQ.
 */
package com.aga.onboard.tables.daos


import com.aga.onboard.tables.Company
import com.aga.onboard.tables.records.CompanyRecord

import java.util.UUID

import kotlin.collections.List

import org.jooq.Configuration
import org.jooq.impl.DAOImpl


/**
 * Информация о компаниях
 */
@Suppress("UNCHECKED_CAST")
open class CompanyDao(configuration: Configuration?) : DAOImpl<CompanyRecord, com.aga.onboard.tables.pojos.Company, UUID>(Company.COMPANY, com.aga.onboard.tables.pojos.Company::class.java, configuration) {

    /**
     * Create a new CompanyDao without any configuration
     */
    constructor(): this(null)

    override fun getId(o: com.aga.onboard.tables.pojos.Company): UUID? = o.id

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfId(lowerInclusive: UUID?, upperInclusive: UUID?): List<com.aga.onboard.tables.pojos.Company> = fetchRange(Company.COMPANY.ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    fun fetchById(vararg values: UUID): List<com.aga.onboard.tables.pojos.Company> = fetch(Company.COMPANY.ID, *values)

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    fun fetchOneById(value: UUID): com.aga.onboard.tables.pojos.Company? = fetchOne(Company.COMPANY.ID, value)

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfName(lowerInclusive: String?, upperInclusive: String?): List<com.aga.onboard.tables.pojos.Company> = fetchRange(Company.COMPANY.NAME, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    fun fetchByName(vararg values: String): List<com.aga.onboard.tables.pojos.Company> = fetch(Company.COMPANY.NAME, *values)
}
