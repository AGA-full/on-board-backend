/*
 * This file is generated by jOOQ.
 */
package com.aga.onboard.tables.daos


import com.aga.onboard.tables.OnboardingTag
import com.aga.onboard.tables.records.OnboardingTagRecord

import java.util.UUID

import kotlin.collections.List

import org.jooq.Configuration
import org.jooq.Record2
import org.jooq.impl.DAOImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class OnboardingTagDao(configuration: Configuration?) : DAOImpl<OnboardingTagRecord, com.aga.onboard.tables.pojos.OnboardingTag, Record2<Int?, UUID?>>(OnboardingTag.ONBOARDING_TAG, com.aga.onboard.tables.pojos.OnboardingTag::class.java, configuration) {

    /**
     * Create a new OnboardingTagDao without any configuration
     */
    constructor(): this(null)

    override fun getId(o: com.aga.onboard.tables.pojos.OnboardingTag): Record2<Int?, UUID?> = compositeKeyRecord(o.tagId, o.onboardingId)

    /**
     * Fetch records that have <code>tag_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfTagId(lowerInclusive: Int?, upperInclusive: Int?): List<com.aga.onboard.tables.pojos.OnboardingTag> = fetchRange(OnboardingTag.ONBOARDING_TAG.TAG_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>tag_id IN (values)</code>
     */
    fun fetchByTagId(vararg values: Int): List<com.aga.onboard.tables.pojos.OnboardingTag> = fetch(OnboardingTag.ONBOARDING_TAG.TAG_ID, *values.toTypedArray())

    /**
     * Fetch records that have <code>onboarding_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfOnboardingId(lowerInclusive: UUID?, upperInclusive: UUID?): List<com.aga.onboard.tables.pojos.OnboardingTag> = fetchRange(OnboardingTag.ONBOARDING_TAG.ONBOARDING_ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>onboarding_id IN (values)</code>
     */
    fun fetchByOnboardingId(vararg values: UUID): List<com.aga.onboard.tables.pojos.OnboardingTag> = fetch(OnboardingTag.ONBOARDING_TAG.ONBOARDING_ID, *values)

    /**
     * Fetch records that have <code>tag_rank BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfTagRank(lowerInclusive: Int?, upperInclusive: Int?): List<com.aga.onboard.tables.pojos.OnboardingTag> = fetchRange(OnboardingTag.ONBOARDING_TAG.TAG_RANK, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>tag_rank IN (values)</code>
     */
    fun fetchByTagRank(vararg values: Int): List<com.aga.onboard.tables.pojos.OnboardingTag> = fetch(OnboardingTag.ONBOARDING_TAG.TAG_RANK, *values.toTypedArray())
}
