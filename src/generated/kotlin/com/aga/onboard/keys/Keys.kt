/*
 * This file is generated by jOOQ.
 */
package com.aga.onboard.keys


import com.aga.onboard.tables.Company
import com.aga.onboard.tables.Databasechangeloglock
import com.aga.onboard.tables.Onboarding
import com.aga.onboard.tables.OnboardingProcess
import com.aga.onboard.tables.OnboardingTag
import com.aga.onboard.tables.Tag
import com.aga.onboard.tables.Team
import com.aga.onboard.tables.Worker
import com.aga.onboard.tables.records.CompanyRecord
import com.aga.onboard.tables.records.DatabasechangeloglockRecord
import com.aga.onboard.tables.records.OnboardingProcessRecord
import com.aga.onboard.tables.records.OnboardingRecord
import com.aga.onboard.tables.records.OnboardingTagRecord
import com.aga.onboard.tables.records.TagRecord
import com.aga.onboard.tables.records.TeamRecord
import com.aga.onboard.tables.records.WorkerRecord

import org.jooq.UniqueKey
import org.jooq.impl.DSL
import org.jooq.impl.Internal



// -------------------------------------------------------------------------
// UNIQUE and PRIMARY KEY definitions
// -------------------------------------------------------------------------

val COMPANY_PKEY: UniqueKey<CompanyRecord> = Internal.createUniqueKey(Company.COMPANY, DSL.name("company_pkey"), arrayOf(Company.COMPANY.ID), true)
val DATABASECHANGELOGLOCK_PKEY: UniqueKey<DatabasechangeloglockRecord> = Internal.createUniqueKey(Databasechangeloglock.DATABASECHANGELOGLOCK, DSL.name("databasechangeloglock_pkey"), arrayOf(Databasechangeloglock.DATABASECHANGELOGLOCK.ID), true)
val ONBOARDING_PKEY: UniqueKey<OnboardingRecord> = Internal.createUniqueKey(Onboarding.ONBOARDING, DSL.name("onboarding_pkey"), arrayOf(Onboarding.ONBOARDING.ID), true)
val PK_ONBOARDING_PROCESS: UniqueKey<OnboardingProcessRecord> = Internal.createUniqueKey(OnboardingProcess.ONBOARDING_PROCESS, DSL.name("pk_onboarding_process"), arrayOf(OnboardingProcess.ONBOARDING_PROCESS.WORKER_ID, OnboardingProcess.ONBOARDING_PROCESS.ONBOARDING_ID), true)
val PK_ONBOARDING_TAG: UniqueKey<OnboardingTagRecord> = Internal.createUniqueKey(OnboardingTag.ONBOARDING_TAG, DSL.name("pk_onboarding_tag"), arrayOf(OnboardingTag.ONBOARDING_TAG.TAG_ID, OnboardingTag.ONBOARDING_TAG.ONBOARDING_ID), true)
val TAG_PKEY: UniqueKey<TagRecord> = Internal.createUniqueKey(Tag.TAG, DSL.name("tag_pkey"), arrayOf(Tag.TAG.ID), true)
val TEAM_PKEY: UniqueKey<TeamRecord> = Internal.createUniqueKey(Team.TEAM, DSL.name("team_pkey"), arrayOf(Team.TEAM.ID), true)
val WORKER_PKEY: UniqueKey<WorkerRecord> = Internal.createUniqueKey(Worker.WORKER, DSL.name("worker_pkey"), arrayOf(Worker.WORKER.ID), true)
